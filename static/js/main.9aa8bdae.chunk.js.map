{"version":3,"sources":["hanging-man sync //.(PNG|png)$","hanging-man/hm1.PNG","hanging-man/hm10.PNG","hanging-man/hm2.PNG","hanging-man/hm3.PNG","hanging-man/hm4.PNG","hanging-man/hm5.PNG","hanging-man/hm6.PNG","hanging-man/hm7.PNG","hanging-man/hm8.PNG","hanging-man/hm9.PNG","utils.js","App.js","index.js"],"names":["map","./hm1.PNG","./hm10.PNG","./hm2.PNG","./hm3.PNG","./hm4.PNG","./hm5.PNG","./hm6.PNG","./hm7.PNG","./hm8.PNG","./hm9.PNG","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","getRandomWord","words","Math","floor","random","length","toLowerCase","images","r","forEach","item","index","replace","importAll","require","App","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateGuessesLeft","setState","guessesLeft","state","wrongGuesses","updateGameState","isGameOver","generateWordDisplay","currWord","setTimeout","alert","concat","endGame","_step","wordDisplay","_iterator","_createForOfIteratorHelper","s","n","done","letter","value","guessedLetters","includes","push","err","f","join","validateInput","input","currGuess","match","handleChange","event","target","handleKeyUp","key","handleSubmit","preventDefault","toConsumableArray","roundsWon","roundsPlayed","restartGame","inherits","createClass","react_default","a","createElement","className","src","alt","Form","Label","htmlFor","Control","autoFocus","type","placeholder","onChange","onKeyUp","Button","variant","onClick","get","React","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"oyOAAA,IAAAA,EAAA,CACAC,YAAA,GACAC,aAAA,GACAC,YAAA,GACAC,YAAA,GACAC,YAAA,GACAC,YAAA,GACAC,YAAA,GACAC,YAAA,GACAC,YAAA,GACAC,YAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAb,EAAAY,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAnB,IAEAW,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,oBChCAS,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,4KCE3BC,EAAgB,WAE3B,OAAOC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,SAASC,8jCCUzD,IAAMC,EARN,SAAmBC,GACjB,IAAID,EAAS,GAIb,OAHAC,EAAEd,OAAOe,QAAQ,SAACC,EAAMC,GACtBJ,EAAOG,EAAKE,QAAQ,KAAM,KAAOJ,EAAEE,KAE9BH,EAGMM,CACbC,OAyNaC,EAtNN,SAAAC,GACP,SAAAD,EAAYE,GAAO,IAAAC,EAUf,OAVevB,OAAAwB,EAAA,EAAAxB,CAAAyB,KAAAL,IACjBG,EAAAvB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAzB,OAAA2B,EAAA,EAAA3B,CAAAoB,GAAAQ,KAAAH,KAAMH,KAYRO,kBAAoB,WAClBN,EAAKO,SACH,CACEC,YAAa,GAAKR,EAAKS,MAAMC,aAAavB,QAE5Ca,EAAKW,kBAERX,EAEDW,gBAAkB,WACZX,EAAKY,aAELZ,EAAKa,sBAAsBnB,QAAQ,KAAM,MAAQM,EAAKS,MAAMK,SAE5DC,WAAW,WACTC,MAAK,sCAAAC,OAAuCjB,EAAKS,MAAMK,SAAQ,QAC9D,KACMd,EAAKS,MAAMD,YAAc,EAClCO,WAAW,WACTC,MAAM,uBACL,KACMhB,EAAKS,MAAMD,aAAe,GAAKR,EAAKS,MAAMD,YAAc,EACjEO,WAAW,WACTC,MAAM,iBACL,KACMhB,EAAKS,MAAMD,aAAe,GACnCO,WAAW,WACTC,MAAM,0BACL,KAELhB,EAAKkB,YAERlB,EAEDa,oBAAsB,WACpB,IACsCM,EADhCC,EAAc,GAAGC,EAAAC,EACJtB,EAAKS,MAAMK,UAAQ,IAAtC,IAAAO,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAwC,KAA/BC,EAAMP,EAAAQ,MACT3B,EAAKS,MAAMmB,eAAeC,SAASH,GACrCN,EAAYU,KAAKJ,GAEjBN,EAAYU,KAAK,MAEpB,MAAAC,GAAAV,EAAAhD,EAAA0D,GAAA,QAAAV,EAAAW,IACD,OAAOZ,EAAYa,KAAK,MACzBjC,EAEDkC,cAAgB,WACd,IAAMC,EAAQnC,EAAKS,MAAM2B,UACzB,OAAIpC,EAAKS,MAAMmB,eAAeC,SAASM,EAAM/C,gBAC3C4B,MAAK,6BAAAC,OAC0BjB,EAAKS,MAAM2B,UAAS,2BAEnDpC,EAAKO,SAAS,CAAE6B,UAAW,MACpB,MAEHD,EAAME,MAAM,gBAAmC,IAAjBF,EAAMhD,UACxC6B,MAAM,2CACNhB,EAAKO,SAAS,CAAE6B,UAAW,MACpB,IAIVpC,EAWDsC,aAAe,SAACC,GACdvC,EAAKO,SAAS,CACZ6B,UAAWG,EAAMC,OAAOb,SAE3B3B,EAEDyC,YAAc,SAACF,GACK,UAAdA,EAAMG,KACR1C,EAAK2C,aAAaJ,IAErBvC,EAED2C,aAAe,SAACJ,GACdA,EAAMK,iBACF5C,EAAKkC,kBACHlC,EAAKS,MAAMK,SAASe,SAAS7B,EAAKS,MAAM2B,UAAUhD,eACpDY,EAAKO,SACH,CACEqB,eAAc,GAAAX,OAAAxC,OAAAoE,EAAA,EAAApE,CACTuB,EAAKS,MAAMmB,gBAAc,CAC5B5B,EAAKS,MAAM2B,UAAUhD,gBAEvBgD,UAAW,IAEbpC,EAAKM,mBAGPN,EAAKO,SACH,CACEqB,eAAc,GAAAX,OAAAxC,OAAAoE,EAAA,EAAApE,CACTuB,EAAKS,MAAMmB,gBAAc,CAC5B5B,EAAKS,MAAM2B,UAAUhD,gBAEvBsB,aAAY,GAAAO,OAAAxC,OAAAoE,EAAA,EAAApE,CACPuB,EAAKS,MAAMC,cAAY,CAC1BV,EAAKS,MAAM2B,UAAUhD,gBAEvBgD,UAAW,IAEbpC,EAAKM,qBAIZN,EAEDkB,QAAU,WACR,GAAIlB,EAAKY,WAAY,CACnB,IAAMkC,EACJ9C,EAAKa,sBAAsBnB,QAAQ,KAAM,MAAQM,EAAKS,MAAMK,SACxDd,EAAKS,MAAMqC,UAAY,EACvB9C,EAAKS,MAAMqC,UAEjB9C,EAAKO,SAAS,CACZwC,aAAc/C,EAAKS,MAAMsC,aAAe,EACxCD,UAAWA,MAGhB9C,EAEDgD,YAAc,WACZhD,EAAKO,SAAS,CACZO,SAAUhC,IACV8C,eAAgB,GAChBlB,aAAc,GACdF,YAAa,GACb4B,UAAW,MArJbpC,EAAKS,MAAQ,CACXK,SAAUhC,IACV8C,eAAgB,GAChBlB,aAAc,GACdF,YAAa,GACb4B,UAAW,GACXW,aAAc,EACdD,UAAW,GACX9C,EA0EJ,OArFOvB,OAAAwE,EAAA,EAAAxE,CAAAoB,EAAAC,GAYNrB,OAAAyE,EAAA,EAAAzE,CAAAoB,EAAA,EAAA6C,IAAA,SAAAf,MAAA,WAiJC,OACEwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAI,kBAAmB,IAACF,EAAAC,EAAAC,cAAA,WACxBF,EAAAC,EAAAC,cAAA,OAAKnF,GAAG,aACNiF,EAAAC,EAAAC,cAAA,OAAKnF,GAAG,gBAAgBgC,KAAKW,uBAC7BsC,EAAAC,EAAAC,cAAA,OAAKnF,GAAG,iBAAgB,kBACPiF,EAAAC,EAAAC,cAAA,WACdnD,KAAKO,MAAMC,aAAavB,OAAS,EAC9Be,KAAKO,MAAMC,aAAauB,KAAK,KAC7B,KAENkB,EAAAC,EAAAC,cAAA,OAAKnF,GAAG,gBAAe,iBACNgC,KAAKO,MAAMD,YAC1B2C,EAAAC,EAAAC,cAAA,OACEE,IAAKlE,EAAM,KAAA4B,OAAM,GAAKf,KAAKO,MAAMD,YAAW,SAC5CgD,IAAI,QAIRtD,KAAKU,YACLuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACI,EAAA,EAAKC,MAAK,CAACC,QAAQ,SAAQ,WAC5BR,EAAAC,EAAAC,cAACI,EAAA,EAAKG,QAAO,CACXC,WAAS,EACTC,KAAK,OACL5F,GAAG,QACHyD,MAAOzB,KAAKO,MAAM2B,UAClB2B,YAAY,WACZC,SAAU9D,KAAKoC,aACf2B,QAAS/D,KAAKuC,cAEhBU,EAAAC,EAAAC,cAACa,EAAA,EAAM,CAACC,QAAQ,QAAQC,QAASlE,KAAKyC,cAAc,WAKvDzC,KAAKU,YACJuC,EAAAC,EAAAC,cAACa,EAAA,EAAM,CACLhG,GAAG,gBACHiG,QAAQ,UACRC,QAASlE,KAAK8C,aACf,iBAIHG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKnF,GAAG,cAAa,OACdgC,KAAKO,MAAMqC,UAAU,WAAS5C,KAAKO,MAAMsC,aAC7C7C,KAAKO,MAAMsC,aAAe,EAAI,UAAY,cAKpD,CAAAL,IAAA,aAAA2B,IAAA,WApIC,QACEnE,KAAKO,MAAMD,YAAc,GACzBN,KAAKW,sBAAsBnB,QAAQ,KAAM,MAAQQ,KAAKO,MAAMK,cAIhEjB,EArFO,CAASyE,IAAMC,WCbXC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAEHzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,WAAU,KACf1B,EAAAC,EAAAC,cAACyB,EAAG","file":"static/js/main.9aa8bdae.chunk.js","sourcesContent":["var map = {\n\t\"./hm1.PNG\": 35,\n\t\"./hm10.PNG\": 36,\n\t\"./hm2.PNG\": 37,\n\t\"./hm3.PNG\": 38,\n\t\"./hm4.PNG\": 39,\n\t\"./hm5.PNG\": 40,\n\t\"./hm6.PNG\": 41,\n\t\"./hm7.PNG\": 42,\n\t\"./hm8.PNG\": 43,\n\t\"./hm9.PNG\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","module.exports = __webpack_public_path__ + \"static/media/hm1.56c26afc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm10.d962330c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm2.ce97369b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm3.4d3b3a4b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm4.2015fa48.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm5.31469c11.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm6.b9fbe115.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm7.64feb9d4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm8.6e017de0.PNG\";","module.exports = __webpack_public_path__ + \"static/media/hm9.51df2ea2.PNG\";","import words from \"./words.json\";\n\nexport const getRandomWord = () => {\n  // Lowercase words for simplicity\n  return words[Math.floor(Math.random() * words.length)].toLowerCase();\n};\n","import React from \"react\";\nimport { getRandomWord } from \"./utils.js\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().forEach((item, index) => {\n    images[item.replace(\"./\", \"\")] = r(item);\n  });\n  return images;\n}\n\nconst images = importAll(\n  require.context(\"./hanging-man\", true, /\\.(PNG|png)$/)\n);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currWord: getRandomWord(),\n      guessedLetters: [],\n      wrongGuesses: [],\n      guessesLeft: 10,\n      currGuess: \"\",\n      roundsPlayed: 0,\n      roundsWon: 0,\n    };\n  }\n\n  updateGuessesLeft = () => {\n    this.setState(\n      {\n        guessesLeft: 10 - this.state.wrongGuesses.length,\n      },\n      this.updateGameState\n    );\n  };\n\n  updateGameState = () => {\n    if (this.isGameOver) {\n      if (\n        this.generateWordDisplay().replace(/ /g, \"\") !== this.state.currWord\n      ) {\n        setTimeout(() => {\n          alert(`You ran out of tries! The word is \"${this.state.currWord}\".`);\n        }, 700);\n      } else if (this.state.guessesLeft > 5) {\n        setTimeout(() => {\n          alert(\"That's impressive!\");\n        }, 100);\n      } else if (this.state.guessesLeft <= 5 && this.state.guessesLeft > 2) {\n        setTimeout(() => {\n          alert(\"Good effort!\");\n        }, 100);\n      } else if (this.state.guessesLeft <= 2) {\n        setTimeout(() => {\n          alert(\"Phew! That was close.\");\n        }, 100);\n      }\n      this.endGame();\n    }\n  };\n\n  generateWordDisplay = () => {\n    const wordDisplay = [];\n    for (let letter of this.state.currWord) {\n      if (this.state.guessedLetters.includes(letter)) {\n        wordDisplay.push(letter);\n      } else {\n        wordDisplay.push(\"_\");\n      }\n    }\n    return wordDisplay.join(\" \");\n  };\n\n  validateInput = () => {\n    const input = this.state.currGuess;\n    if (this.state.guessedLetters.includes(input.toLowerCase())) {\n      alert(\n        `You have already guessed \"${this.state.currGuess}\"! Try another letter.`\n      );\n      this.setState({ currGuess: \"\" });\n      return false;\n    }\n    if (!(input.match(/^[A-Za-z]+$/) && input.length === 1)) {\n      alert(\"Please enter just one letter at a time!\");\n      this.setState({ currGuess: \"\" });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  get isGameOver() {\n    return !(\n      this.state.guessesLeft > 0 &&\n      this.generateWordDisplay().replace(/ /g, \"\") !== this.state.currWord\n    );\n  }\n\n  // Insert form callback functions handleChange and handleSubmit here\n\n  handleChange = (event) => {\n    this.setState({\n      currGuess: event.target.value,\n    });\n  };\n\n  handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleSubmit(event);\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.validateInput()) {\n      if (this.state.currWord.includes(this.state.currGuess.toLowerCase())) {\n        this.setState(\n          {\n            guessedLetters: [\n              ...this.state.guessedLetters,\n              this.state.currGuess.toLowerCase(),\n            ],\n            currGuess: \"\",\n          },\n          this.updateGuessesLeft\n        );\n      } else {\n        this.setState(\n          {\n            guessedLetters: [\n              ...this.state.guessedLetters,\n              this.state.currGuess.toLowerCase(),\n            ],\n            wrongGuesses: [\n              ...this.state.wrongGuesses,\n              this.state.currGuess.toLowerCase(),\n            ],\n            currGuess: \"\",\n          },\n          this.updateGuessesLeft\n        );\n      }\n    }\n  };\n\n  endGame = () => {\n    if (this.isGameOver) {\n      const roundsWon =\n        this.generateWordDisplay().replace(/ /g, \"\") === this.state.currWord\n          ? this.state.roundsWon + 1\n          : this.state.roundsWon;\n\n      this.setState({\n        roundsPlayed: this.state.roundsPlayed + 1,\n        roundsWon: roundsWon,\n      });\n    }\n  };\n\n  restartGame = () => {\n    this.setState({\n      currWord: getRandomWord(),\n      guessedLetters: [],\n      wrongGuesses: [],\n      guessesLeft: 10,\n      currGuess: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Guess The Word</h1> <br />\n          <div id=\"container\">\n            <div id=\"word-display\">{this.generateWordDisplay()}</div>\n            <div id=\"wrong-guesses\">\n              Wrong guesses: <br />\n              {this.state.wrongGuesses.length > 0\n                ? this.state.wrongGuesses.join(\" \")\n                : \"-\"}\n            </div>\n            <div id=\"guesses-left\">\n              Guesses Left: {this.state.guessesLeft}\n              <img\n                src={images[`hm${10 - this.state.guessesLeft}.PNG`]}\n                alt=\"\"\n              />\n            </div>\n          </div>\n          {!this.isGameOver && (\n            <div className=\"form\">\n              <Form.Label htmlFor=\"guess\">Guess: </Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"text\"\n                id=\"guess\"\n                value={this.state.currGuess}\n                placeholder=\"e.g. 'e'\"\n                onChange={this.handleChange}\n                onKeyUp={this.handleKeyUp}\n              />\n              <Button variant=\"light\" onClick={this.handleSubmit}>\n                Submit\n              </Button>\n            </div>\n          )}\n          {this.isGameOver && (\n            <Button\n              id=\"another-round\"\n              variant=\"success\"\n              onClick={this.restartGame}\n            >\n              Another round\n            </Button>\n          )}\n          <br />\n          <div id=\"game-score\">\n            Won {this.state.roundsWon} out of {this.state.roundsPlayed}\n            {this.state.roundsPlayed > 1 ? \" rounds\" : \" round\"}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // strict mode makes the App render twice\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}